{"ast":null,"code":"import { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { selectIsAuthenticated } from './auth.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuardService = /*#__PURE__*/(() => {\n  class AuthGuardService {\n    constructor(store, router) {\n      this.store = store;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      this.store.pipe(select(selectIsAuthenticated)).subscribe({\n        next: v => this.isAuthenticated = v,\n        error: e => console.log(e)\n      });\n\n      if (this.isAuthenticated) {\n        return true;\n      }\n\n      this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n\n  }\n\n  AuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n    return new (t || AuthGuardService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuardService,\n    factory: AuthGuardService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuardService;\n})();","map":null,"metadata":{},"sourceType":"module"}