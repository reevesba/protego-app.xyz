{"ast":null,"code":"import { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\nimport { environment as env } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@angular/platform-browser\";\nexport let TitleService = /*#__PURE__*/(() => {\n  class TitleService {\n    constructor(translateService, title) {\n      this.translateService = translateService;\n      this.title = title;\n    }\n\n    setTitle(snapshot, lazyTranslateService) {\n      let lastChild = snapshot;\n\n      while (lastChild.children.length) {\n        lastChild = lastChild.children[0];\n      }\n\n      const {\n        title\n      } = lastChild.data;\n      const translate = lazyTranslateService || this.translateService;\n\n      if (title) {\n        translate.get(title).pipe(filter(translatedTitle => translatedTitle !== title)).subscribe(translatedTitle => this.title.setTitle(`${translatedTitle} - ${env.appName}`));\n      } else {\n        this.title.setTitle(env.appName);\n      }\n    }\n\n  }\n\n  TitleService.ɵfac = function TitleService_Factory(t) {\n    return new (t || TitleService)(i0.ɵɵinject(i1.TranslateService), i0.ɵɵinject(i2.Title));\n  };\n\n  TitleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TitleService,\n    factory: TitleService.ɵfac,\n    providedIn: 'root'\n  });\n  return TitleService;\n})();","map":null,"metadata":{},"sourceType":"module"}