{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst APP_PREFIX = 'PROTEGO-';\nexport let LocalStorageService = /*#__PURE__*/(() => {\n  class LocalStorageService {\n    constructor() {}\n\n    static loadInitialState() {\n      return Object.keys(localStorage).reduce((state, storageKey) => {\n        if (storageKey.includes(APP_PREFIX)) {\n          const stateKeys = storageKey.replace(APP_PREFIX, '').toLowerCase().split('.').map(key => key.split('-').map((token, index) => index === 0 ? token : token.charAt(0).toUpperCase() + token.slice(1)).join(''));\n          let currentStateRef = state;\n          stateKeys.forEach((key, index) => {\n            if (index === stateKeys.length - 1) {\n              currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n              return;\n            }\n\n            currentStateRef[key] = currentStateRef[key] || {};\n            currentStateRef = currentStateRef[key];\n          });\n        }\n\n        return state;\n      }, {});\n    }\n\n    setItem(key, value) {\n      localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n    }\n\n    getItem(key) {\n      return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n    }\n\n    removeItem(key) {\n      localStorage.removeItem(`${APP_PREFIX}${key}`);\n    }\n    /** Tests that localStorage exists, can be written to, and read from. */\n\n\n    testLocalStorage() {\n      const testValue = 'testValue';\n      const testKey = 'testKey';\n      const errorMessage = 'localStorage did not return expected value';\n      this.setItem(testKey, testValue);\n      const retrievedValue = this.getItem(testKey);\n      this.removeItem(testKey);\n\n      if (retrievedValue !== testValue) {\n        throw new Error(errorMessage);\n      }\n    }\n\n  }\n\n  LocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n    return new (t || LocalStorageService)();\n  };\n\n  LocalStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalStorageService,\n    factory: LocalStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}