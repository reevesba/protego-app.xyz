{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment as env } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = env.apiUrl + '/users';\n    }\n\n    static _handleError(err) {\n      return throwError(() => err.message || 'Error: Unable to complete request.');\n    }\n\n    getUsers() {\n      return this.http.get(`${this.API_URL}`).pipe(catchError(UsersService._handleError));\n    }\n\n    getUser(username) {\n      return this.http.get(`${this.API_URL}/${username}`).pipe(catchError(UsersService._handleError));\n    }\n\n    getUsername(emailToken) {\n      return this.http.get(`${this.API_URL}/email/${emailToken}`).pipe(catchError(UsersService._handleError));\n    }\n\n    getUserPhoto(username) {\n      return this.http.get(`${this.API_URL}/photo/${username}`, {\n        responseType: 'text'\n      }).pipe(catchError(UsersService._handleError));\n    }\n\n    getUsersRoles() {\n      return this.http.get(`${this.API_URL}/roles`).pipe(catchError(UsersService._handleError));\n    }\n\n    saveUserRole(userRole) {\n      return this.http.post(`${this.API_URL}/roles`, userRole).pipe(catchError(UsersService._handleError));\n    }\n\n    updateUser(user) {\n      return this.http.put(`${this.API_URL}`, user).pipe(catchError(UsersService._handleError));\n    }\n\n    updateUserPhoto(username, formData) {\n      return this.http.put(`${this.API_URL}/photo/${username}`, formData).pipe(catchError(UsersService._handleError));\n    }\n\n    deleteUser(userId) {\n      return this.http.delete(`${this.API_URL}/${userId}`).pipe(catchError(UsersService._handleError));\n    }\n\n  }\n\n  UsersService.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac\n  });\n  return UsersService;\n})();","map":null,"metadata":{},"sourceType":"module"}