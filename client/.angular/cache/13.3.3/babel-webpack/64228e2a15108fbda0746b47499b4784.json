{"ast":null,"code":"import { ErrorHandler } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { NotificationService } from '../notifications/notification.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../notifications/notification.service\";\n/** Application-wide error handler that adds a UI notification to the error handling\n * provided by the default Angular ErrorHandler.\n */\n\nexport let AppErrorHandler = /*#__PURE__*/(() => {\n  class AppErrorHandler extends ErrorHandler {\n    constructor(notificationsService) {\n      super();\n      this.notificationsService = notificationsService;\n    }\n\n    handleError(error) {\n      let displayMessage = 'An error occurred.';\n\n      if (!environment.production) {\n        displayMessage += ' See console for details.';\n      }\n\n      this.notificationsService.error(displayMessage);\n      super.handleError(error);\n    }\n\n  }\n\n  AppErrorHandler.ɵfac = function AppErrorHandler_Factory(t) {\n    return new (t || AppErrorHandler)(i0.ɵɵinject(i1.NotificationService));\n  };\n\n  AppErrorHandler.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppErrorHandler,\n    factory: AppErrorHandler.ɵfac\n  });\n  return AppErrorHandler;\n})();","map":null,"metadata":{},"sourceType":"module"}