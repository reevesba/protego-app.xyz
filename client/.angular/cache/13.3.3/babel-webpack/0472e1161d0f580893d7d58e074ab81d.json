{"ast":null,"code":"import { User } from '../../admin/users/user.model';\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { UsernameCommService } from '../username.comm.service';\nimport { TokenService } from '../../../shared/services/token.service';\nimport { UsersService } from '../../../features/admin/users/users.service';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../username.comm.service\";\nimport * as i5 from \"../../../features/admin/users/users.service\";\nimport * as i6 from \"../../../shared/services/token.service\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"ng-recaptcha\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@ngx-translate/core\";\n\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2, \"error_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"protego.login.email.warn1\"), \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2, \"error_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"protego.login.email.warn2\"), \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2, \"error_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"protego.login.required\"), \" \");\n  }\n}\n\nconst _c0 = function () {\n  return [\"/login/forgot-password\"];\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, router, route, fb, communicationService, usersService, tokenService) {\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.fb = fb;\n      this.communicationService = communicationService;\n      this.usersService = usersService;\n      this.tokenService = tokenService;\n      this.submitted = false;\n      this.hide = true; // recaptcha\n\n      this.siteKey = \"6Lf57HQaAAAAAPPcEnDe7TO4PVTyUjN1w3qd91EQ\";\n      this.recaptchaComplete = false;\n    }\n\n    ngOnInit() {\n      if (this.tokenService.username) {\n        this.router.navigate(['/home']);\n      }\n\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      }); // get return url from route parameters or default to '/'\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    get loginFormControl() {\n      return this.loginForm.controls;\n    }\n\n    onLogin() {\n      this.submitted = true;\n\n      if (this.loginForm.valid) {\n        this.user = new User(this.loginForm.value);\n        this.authService.login(this.user).subscribe({\n          next: v => {\n            this.userRole = jwt_decode(v.auth_token).role, this.getUserPhoto(jwt_decode(v.auth_token).username), this.router.navigate([this.returnUrl]);\n          },\n          error: e => console.log(e)\n        });\n      }\n    }\n\n    getUserPhoto(username) {\n      this.usersService.getUserPhoto(username).subscribe({\n        next: v => {\n          this.communicationService.emitChange({\n            username: username,\n            role: this.userRole,\n            profilePhoto: 'data:image/gif;base64,' + v\n          });\n        },\n        error: e => console.log(e)\n      });\n    } // recaptcha helpers\n\n\n    resolved(captchaResponse) {\n      this.authService.validateRecaptcha(captchaResponse).subscribe({\n        next: v => {\n          if (v['success']) {\n            this.recaptchaComplete = true;\n          }\n        },\n        error: e => console.log(e)\n      });\n    }\n\n    onError(errorDetails) {\n      console.log(`reCAPTCHA error encountered; details:`, errorDetails);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.UsernameCommService), i0.ɵɵdirectiveInject(i5.UsersService), i0.ɵɵdirectiveInject(i6.TokenService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"login\"]],\n    decls: 30,\n    vars: 28,\n    consts: [[1, \"protego-page-container\"], [1, \"protego-login-form\"], [1, \"protego-form\", 3, \"formGroup\"], [1, \"protego-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\", 3, \"placeholder\"], [\"align\", \"end\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\", \"placeholder\"], [3, \"routerLink\"], [\"matSuffix\", \"\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"protego-recaptcha\"], [\"errorMode\", \"handled\", 3, \"siteKey\", \"resolved\", \"error\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"protego-button\", 3, \"disabled\", \"click\"], [2, \"margin-right\", \"2px\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"form\", 2)(3, \"mat-card-title\");\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"mat-form-field\", 3);\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelement(10, \"mat-hint\", 5);\n        i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 5, 3, \"mat-error\", 6);\n        i0.ɵɵtemplate(12, LoginComponent_mat_error_12_Template, 5, 3, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 3);\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelementStart(16, \"mat-hint\", 5)(17, \"a\", 8);\n        i0.ɵɵtext(18);\n        i0.ɵɵpipe(19, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, LoginComponent_mat_error_20_Template, 5, 3, \"mat-error\", 6);\n        i0.ɵɵelementStart(21, \"mat-icon\", 9);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_mat_icon_click_21_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 10)(24, \"re-captcha\", 11);\n        i0.ɵɵlistener(\"resolved\", function LoginComponent_Template_re_captcha_resolved_24_listener($event) {\n          return ctx.resolved($event);\n        })(\"error\", function LoginComponent_Template_re_captcha_error_24_listener($event) {\n          return ctx.onError($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"mat-card-actions\")(26, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_26_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵtext(28);\n        i0.ɵɵpipe(29, \"translate\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 15, \"protego.login.login\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(9, 17, \"protego.login.email\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginFormControl.email.touched || ctx.submitted) && (ctx.loginFormControl.email.errors == null ? null : ctx.loginFormControl.email.errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginFormControl.email.touched || ctx.submitted) && (ctx.loginFormControl.email.errors == null ? null : ctx.loginFormControl.email.errors.email));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(15, 19, \"protego.login.password\"));\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(27, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(19, 21, \"protego.login.forgot.password\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginFormControl.password.touched || ctx.submitted) && (ctx.loginFormControl.password.errors == null ? null : ctx.loginFormControl.password.errors.required));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"siteKey\", ctx.siteKey);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid || !ctx.recaptchaComplete);\n        i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(27, 23, \"protego.login.aria\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(29, 25, \"protego.login.login\"));\n      }\n    },\n    directives: [i7.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i7.MatCardTitle, i7.MatCardContent, i8.MatFormField, i9.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i8.MatHint, i10.NgIf, i8.MatError, i11.MatIcon, i2.RouterLinkWithHref, i8.MatSuffix, i12.RecaptchaComponent, i7.MatCardActions, i13.MatButton],\n    pipes: [i14.TranslatePipe],\n    styles: [\".protego-page-container[_ngcontent-%COMP%]{height:75vh;display:flex;justify-content:center;align-items:center}.protego-login-form[_ngcontent-%COMP%]{min-width:150px;max-width:350px;width:100%}.protego-full-width[_ngcontent-%COMP%]{width:100%;padding-bottom:1em}.protego-recaptcha[_ngcontent-%COMP%]{padding-bottom:1em;padding-left:5px}.protego-button[_ngcontent-%COMP%]{margin-left:1em!important;margin-bottom:1em!important}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}