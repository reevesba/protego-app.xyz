{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { selectToken } from '../auth/auth.selectors';\nimport { Store, select } from '@ngrx/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let JwtInterceptor = /*#__PURE__*/(() => {\n  class JwtInterceptor {\n    constructor(store) {\n      this.store = store;\n    }\n\n    intercept(request, next) {\n      if (request.url.includes('arxiv') || request.url.includes('algolia') || request.url.includes('github')) {\n        return next.handle(request);\n      } // add auth header with jwt if user is logged in and request is to api url\n\n\n      this.store.pipe(select(selectToken)).subscribe(res => this.token = res);\n\n      if (this.token) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${this.token}`\n          }\n        });\n      }\n\n      return next.handle(request);\n    }\n\n  }\n\n  JwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n    return new (t || JwtInterceptor)(i0.ɵɵinject(i1.Store));\n  };\n\n  JwtInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptor,\n    factory: JwtInterceptor.ɵfac\n  });\n  return JwtInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}