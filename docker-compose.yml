# Run docker-compose build
# Run docker-compose up
# Live long and prosper

version: '3'

services:
  nginx:
    container_name: web_server
    restart: always
    image: nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    volumes:
      - ./client/dist:/usr/share/nginx/html
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - flask

  flask:
    container_name: app_server
    restart: always
    image: flask
    build: ./server
    volumes:
    - ./server:/usr/src/app/server
    env_file:
     - .env

  postgres:
    container_name: database
    restart: always
    build: ./postgresql
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - .env

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

volumes:
  postgres:
    driver: local
